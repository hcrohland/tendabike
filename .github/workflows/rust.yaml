name: MultiPass
permissions: 
  contents: read
  actions: read
  packages: write
  
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  
env:
  CARGO_TERM_COLOR: always

jobs:
  rust:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - uses: dtolnay/rust-toolchain@stable
      
    - name: Format check
      run: cargo fmt --check
    - name: Build
      run: cargo build --release
    - name: Run tests
      run: cargo test --release --verbose
    - name: Upload tendabike executable
      uses: actions/upload-artifact@v3
      with:
        name: tendabike
        path: |
          - target/release/tendabike
          - /lib/x86_64-linux-gnu/libpq.so.5

  docker:
    needs: rust
    runs-on: ubuntu-latest
    #runs-on: buildjet-2vcpu-ubuntu-2204-arm

    env: 
      TAG: ${{ github.event_name == 'pull_request' && format('DLPR_{0}, ghcr.io/hcrohland/tendabike:dlstaging', github.event.pull_request.number) || 'distroless'}}
    steps:
    - uses: actions/checkout@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - name: Download tendabike executable
      uses: actions/download-artifact@v3
      with:
        name: tendabike
    - run: ls
    -
      name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        file: Dockerfile.distroless
        tags: ghcr.io/hcrohland/tendabike:${{ env.TAG }}
        context: .
        cache-from: type=gha
        cache-to: type=gha,mode=max
      
