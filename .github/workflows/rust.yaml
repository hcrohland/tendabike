name: MultiPass
permissions: 
  contents: read
  actions: read
  packages: write
  
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  
env:
  CARGO_TERM_COLOR: always

jobs:
  rust:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - uses: dtolnay/rust-toolchain@stable
      
    - name: Format check
      run: cargo fmt --check
    - name: Build
      run: cargo build --release
    - name: Run tests
      run: cargo test --release --verbose
    - name: Upload tendabike executable
      uses: actions/upload-artifact@v3
      with:
        name: tendabike
        path: target/release/tendabike
    - name: Upload libs
      uses: actions/upload-artifact@v3
      with:
        name: libs
        path: |
          /lib/x86_64-linux-gnu/libcrypto.so.3
          /lib/x86_64-linux-gnu/libgssapi_krb5.so.2
          /lib/x86_64-linux-gnu/libldap-2.5.so.0
          /lib/x86_64-linux-gnu/libkrb5.so.3
          /lib/x86_64-linux-gnu/libk5crypto.so.3
          /lib/x86_64-linux-gnu/libcom_err.so.2
          /lib/x86_64-linux-gnu/libkrb5support.so.0
          /lib/x86_64-linux-gnu/liblber-2.5.so.0
          /lib/x86_64-linux-gnu/libsasl2.so.2
          /lib/x86_64-linux-gnu/libgnutls.so.30
          /lib/x86_64-linux-gnu/libkeyutils.so.1
          /lib/x86_64-linux-gnu/libresolv.so.2
          /lib/x86_64-linux-gnu/libp11-kit.so.0
          /lib/x86_64-linux-gnu/libidn2.so.0
          /lib/x86_64-linux-gnu/libunistring.so.2
          /lib/x86_64-linux-gnu/libtasn1.so.6
          /lib/x86_64-linux-gnu/libnettle.so.8
          /lib/x86_64-linux-gnu/libhogweed.so.6
          /lib/x86_64-linux-gnu/libgmp.so.10
          /lib/x86_64-linux-gnu/libffi.so.8
          /lib/x86_64-linux-gnu/libgcc_s.so.1
          /lib/x86_64-linux-gnu/libssl.so.3
          /lib/x86_64-linux-gnu/libpq.so.5

  docker:
    needs: rust
    runs-on: ubuntu-latest
    #runs-on: buildjet-2vcpu-ubuntu-2204-arm

    env: 
      TAG: ${{ github.event_name == 'pull_request' && format('DLPR_{0}, ghcr.io/hcrohland/tendabike:dlstaging', github.event.pull_request.number) || 'distroless'}}
    steps:
    - uses: actions/checkout@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - name: Download tendabike executable
      uses: actions/download-artifact@v3
      with:
        name: tendabike
    - name: Download libs
      uses: actions/download-artifact@v3
      with:
        name: libs
    - run: ls
    -
      name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        file: Dockerfile.distroless
        tags: ghcr.io/hcrohland/tendabike:${{ env.TAG }}
        context: .
        cache-from: type=gha
        cache-to: type=gha,mode=max
      
